.piece>:where(polygon){
	fill: var(--fill);
	stroke-width: 2px;
	stroke: var(--stroke);
	filter: drop-shadow(1px 1px 2px rgba(125 80 52 / 0.781));
}

.piece {
	rotate: var(--rotate);
	transition-property: rotate, scale, transform;
	transition-duration: 0.2s;
	transition-timing-function: ease-in-out;
	&[type="O"],
	&[type="G"] {
		scale: 1.2;
	}

	:is(.highlighted:hover &, &.threatened)>polygon {
		animation:  threatened 0.8s ease-in-out infinite alternate;
	}


	&[type="K"],
	&[type="H"] {
		scale: 1.1;
	}

	--fill: hsl(32 60% 64%);
	--stroke: hsl(32, 58%, 57%);

	#board.ou &.ou,
	#board.gyoku &.gyoku {
		cursor: pointer;
	}

	&.threatening polygon{
		filter: drop-shadow(1px 1px 3px firebrick);
	}

	&.immovable {
		pointer-events: none;
		filter: grayscale(0.2);
	}

	& text{
		writing-mode: vertical-rl;
		font-family: LigatureSymbols;
		pointer-events: none;
		text-anchor: middle;
		filter: none !important;
	}

	&.nari text{
		font-family: kouzan;
		font-size: 25pt;
		stroke: red;
		fill: red;
	}

	.nari .selected &:is(.left, .right) {
		pointer-events: all !important;
		cursor: pointer;
		scale: 0.5;
		--translate: 15px;
		
		&:hover {
			scale: 0.65;
			--translate: 12px;
		}
		
		&.left {
			translate: calc(-1 * var(--translate));
		}
	
		&.right {
			translate: var(--translate);
		}
	}


	&.selected {
		transition: transform 2s ease-in;
		transform: translate(-1.5px, -2px) scale(1.04);
		filter: drop-shadow(1px 1px 2px rgba(0, 0, 0, 0.781));
		animation: levitate 2s ease-in-out 2s infinite alternate;

		>polygon{
			stroke: rgb(52, 123, 222);
			stroke-width: 1.4px;
			/* filter: drop-shadow(1px 1px 2px rgb(52 123 222 / 0.8)); */
		}
	}

	&.gyoku {
		--rotate-base: 180deg;
		--rotate: var(--rotate-base);
	}

	&.-j {
		transform: scaleX(0.97);
		--rotate: calc(var(--rotate-base, 0deg) + -60deg);
	}
	&.-k {
		transform: scaleX(0.97);
		--rotate: calc(var(--rotate-base, 0deg) + 60deg);
	}
}

@keyframes threatened {
	to {
		fill: color-mix(in srgb, var(--fill), red 30%);
		stroke: rgb(140, 0, 0);
	}
}

@keyframes levitate {
	to {
		transform: translate(-3px, -4px) scale(1.06);
		filter: drop-shadow(4px 5px 1px rgba(0, 0, 0, 0.502));
	}
}
